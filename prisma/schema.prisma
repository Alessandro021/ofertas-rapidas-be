// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// https://www.prisma.io/docs/getting-started/quickstart

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userId String @id @default(uuid())
  email String @unique
  password String
  profile Profile?
  rule String @default("comum")
  promotion Promotions[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Profile {
  profileId String @id @default(cuid())
  userName String
  userSurname String
  photo String?
  user Users @relation(fields: [userId], references: [userId])
  userId String @unique

   @@map("profile")
}

model Promotions {
  promotionId String @id @default(cuid())
  title String
  company String
  description String
  url String
  photo String?
  expirationDate DateTime?
  comments Comments[]
  category Categories @relation(fields: [categoryId], references: [categoryId])
  categoryId Int
  user Users @relation(fields: [userId], references: [userId])
  userId String
  rating Ratings[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("promotion")
  @@index([title])
}

model Categories {
  categoryId Int @id @default(autoincrement())
  name String @unique
  promotions Promotions[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Comments {
  commentId String @id @default(cuid())
  comment String
  userId String
  userPhoto String?
  userName String
  userSurname String
  promotion Promotions @relation(fields: [promotionId], references: [promotionId])
  promotionId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comment")
}

model Ratings {
  ratingId String @id @default(cuid())
  rating Int
  comment String
  userId String
  promotion Promotions @relation(fields: [promotionId], references: [promotionId])
  promotionId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("rating")
}
